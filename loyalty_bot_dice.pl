<% SWITCH cmd %>
<% CASE 'USER_NOT_FOUND' %>
{{ IF message.contact }}
    {{ IF message.contact }}
    {{ IF message.contact.user_id == message.from.id }}
        {{ phone = message.contact.phone_number.replace('\\+', '') }}
        {{ tg_api( 
            shmRegister = {
                partner_id = args.0 || start_args.pid
                user_login = phone
                callback_data = "/new_user " _ phone
            }
        ) }}
        {{ ELSE }}
        {{ tg_api( sendMessage = {
                text = "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å —á—É–∂–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
            }
        )
        }}          

    {{ END }}
    {{ END }}
    
{{ ELSE }}
{{ TEXT = BLOCK }}
–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞

–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö –∏ –ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
https://cards.premiumbonus.su/FFkrdREDS/personal-data-agreement
–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–æ–∫ –∏ –û—Ñ–µ—Ä—Ç–∞
https://cards.premiumbonus.su/FFkrdREDS/newsletter-agreement
{{ END }}
{{ tg_api( sendMessage = {
        text = TEXT
        reply_markup = {
            keyboard = [
                [
                    {
                        text = "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
                        request_contact = true
                    }
                ]
            ]
            one_time_keyboard = true
            resize_keyboard = true
        }
    }
)
}}
{{ END }}
<% CASE '/new_user' %>
{{ set_phone = user.set( phone = args.0 ) }}
{{# phone = args.0 }}
{{ alp_phone = args.0.replace('^7', '', 1) }}
{{ set_alp_phone = user.set_settings({ 'discount_phone' => alp_phone }) }}
{{ tg_api( deleteMessage = { message_id = message.message_id - 1 } ) }}
{{ tg_api( deleteMessage = { message_id = message.message_id } ) }}
{{ tg_api( sendMessage = {
        text = "–°–ø–∞—Å–∏–±–æ, –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø—Ä–∏–Ω—è—Ç"
        reply_markup = {
            remove_keyboard = true
            selective = true
        }
    }
)
}}
{{# tg_api( deleteMessage = { message_id = message.message_id + 1 } ) }}
{{ tg_api( shmRedirectCallback = { callback_data = '/start' } ) }}
<% CASE ['/start', '/menu'] %>
{{ TEXT = BLOCK }}
–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–Ω—É—Å–Ω–æ–π –∫–∞—Ä—Ç—ã –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∫–æ—Ä–æ—Ç–∫—É –∞–Ω–∫–µ—Ç—É

{{ END }}
{{ IF cmd == '/new_user' }}
{{ END }}
{{ tg_api( sendMessage = {
        text = TEXT
        reply_markup = {
            inline_keyboard = [
                    [{
                        text = "–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É"
                                'web_app' = {
                                    url = config.api.url _ '/shm/v1/public/HTML_REGISTER?format=html&user_id=' _ user.id _ '&profile=' _ tpl.id
                                }
                    }]
                    [{
                        text = "–ë–æ–Ω—É—Å–Ω–∞—è –∫–∞—Ä—Ç–∞"
                        callback_data = '/main'
                    }]
            ]
        }
    }
)
}}
<% CASE '/main' %>
{{ IF callback_query.id }}
{
   "answerCallbackQuery": {
        "callback_query_id": {{ callback_query.id }}
    }
},
{{ END }}
{{# user_get_info = tpl.id( 'api_alp_get_custoner_info' ).parse }}
{{ data = storage.read('name','alp_' _ user.dogovor ) }}
{{ URL = 'https://cards.doze.ru/detect-and-get/?id=' _ user.settings.discount_encrypted_id }}
{{ SET type = data.type == '_–≠–≤–µ—Ä–µ—Å—Ç (20%)' ? '–≠–≤–µ—Ä–µ—Å—Ç (20%)' : data.type }}
{{# img_url = config.loyalty.$type || config.loyalty.generic }}
{{ IF data.type == '_–≠–≤–µ—Ä–µ—Å—Ç (20%)'}}
{{ SET img_url = config.loyalty.everest }}
{{ ELSE }}
{{ SET img_url = config.loyalty.generic }}
{{ END }}
{{ TEXT = BLOCK }}
<b>üí≥ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª—É–±–Ω–æ–π –∫–∞—Ä—Ç–µ</b>

<b>üÜî –ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã:</b> {{ data.id }}

<b>üí∞ –°—É–º–º–∞ –ø–æ–∫—É–ø–æ–∫:</b> {{ data.summa }} —Ä—É–±.

<b>‚ú® –¢–∏–ø –∫–∞—Ä—Ç—ã:</b> {{ type }}

{{ IF data.percent}}
<b>üèÜ –û—Å—Ç–∞—Ç–æ–∫ –ª–∏–º–∏—Ç–∞:</b> {{ data.emprest }} —Ä—É–±.

<b>üíµ –°–∫–∏–¥–∫–∞:</b> {{ data.percent }}%
{{ ELSIF data.score_pc }}
<b>üèÜ –ù–∞–∫–æ–ø–ª–µ–Ω–æ –±–∞–ª–ª–æ–≤:</b> {{ data.score }}

<b>üíµ –ö–µ—à–±—ç–∫:</b> {{ data.score_pc }}%
{{ END }}
{{ END }}
{{ IF cmd == '/new_user' }}
{{ set_phone = user.set( phone = args.0 ) }}
{{ END }}
{{ tg_api( sendPhoto = {
        caption = TEXT
        photo = img_url
        parse_mode = "HTML"
        reply_markup = {
            inline_keyboard = [
                [
                    {
                        text = "–î–æ–±–∞–≤–∏—Ç—å –≤ Wallet / Google Pay"
                        url = URL
                    }
                ]                 
                [
                    {
                        text = "–ü–æ–∫–∞–∑–∞—Ç—å QR-–∫–æ–¥"
                                'web_app' = {
                                    url = 'https://lk.111500.xyz/shm/v1/public/share_link?format=html&user_id=' _ user.id _ '&profile=' _ tpl.id
                                }
                    }
                ]
                [
                    {
                        text = "–£—Å–ª–æ–≤–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏"
                                'web_app' = {
                                    url = "https://alpindustria.ru/discount/"
                                }
                    }
                ]
                [
                    {
                        text = "–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª"
                        url = "https://t.me/Alpindustria_ru"
                    }
                ]                 
            ]
        }
    }
)
}}
<% CASE '/card' %>
        {{ tg_api( 
            setChatMenuButton = {
                chat_id = user.settings.telegram.user_id
                menu_button = {
                    type = 'web_app'
                    text = '–ö–∞—Ä—Ç–∞'
                    web_app = {
                        url = 'https://lk.111500.xyz/shm/v1/public/share_link?format=html&user_id=' _ user.id _ '&profile=' _ tpl.id
                    }
                }
            }
        ) }}   
<% CASE '/shop' %>
        {{ tg_api( 
            setChatMenuButton = {
                chat_id = user.settings.telegram.user_id
                menu_button = {
                    type = "default"
                }
            }
        ) }}  

<% CASE '/ludomania' %>
{{ IF callback_query.id }}
{ "answerCallbackQuery": { "callback_query_id": {{ callback_query.id }} }}
{{ END }}
{{ USE date }}
{{ IF user.settings.last_spin == date.format(date.now, '%Y-%m-%d') }}
{{ day_spin = 0 }}
{{ ELSE }}
{{ day_spin = 1 }}
{{ END }}
{{# spin_count = day_spin + user.settings.free_spin }}
{{ spin_count = user.settings.free_spin || 0 }}
{{ amount = spin_count }}
{{ last_digit = amount % 10 }}
{{ last_two_digits = amount % 100 }}

{{ IF last_two_digits >= 11 && last_two_digits <= 19 }}
{{ rubles = '–ø–æ–ø—ã—Ç–æ–∫' }}
{{ ELSIF last_digit == 1 }}
{{ rubles = '–ø–æ–ø—ã—Ç–∫–∞' }}
{{ ELSIF last_digit >= 2 && last_digit <= 4 }}
{{ rubles = '–ø–æ–ø—ã—Ç–∫–∏' }}
{{ ELSE }}
{{ rubles = '–ø–æ–ø—ã—Ç–æ–∫' }}
{{ END }}
{{ TEXT = BLOCK }}
<b>üéÅ –£ –≤–∞—Å –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–∏–≥—Ä–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 1 –º–µ—Å—è—Ü –≤ –Ω–∞—à–µ–π –∏–≥—Ä–µ üé∞</b>

–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –ø–æ –æ–¥–Ω–æ–π –ø–æ–ø—ã—Ç–∫–µ –∑–∞:
- –ø–æ–∫—É–ø–∫—É –ø–æ–¥–ø–∏—Å–∫–∏ –∏–ª–∏ –ø–æ–¥–∞—Ä–æ—á–Ω–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞
- –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏
- –∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞

{{ IF spin_count == 0 }}
<b>–£ –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ø–æ–ø—ã—Ç–∫–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è!</b>
{{ ELSE }}
–£ –≤–∞—Å –µ—Å—Ç—å {{ spin_count }}{{' '}}{{ rubles }} –Ω–∞ —Å–µ–≥–æ–¥–Ω—è!
{{ END }}
{{ END }}
{{ buttons = [] }}
{{ IF spin_count == 0 }}
{{ IF user.us.has_services_block }}
{{ buttons.push([
{ text = "üí∞ –ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data = "/balance" }
]) }}
{{ END }}
{{ buttons.push([
{ text = "üë´ –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π", callback_data = "/referrals" }
]) }}
{{ buttons.push([
{ text = "‚óÑ –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data = "/menu" }
]) }}
{{ ELSE }}
{{ buttons.push([
{ text = "üé∞ –í—Ä–∞—â–∞—Ç—å –±–∞—Ä–∞–±–∞–Ω", callback_data = "—Å–ø–∏–Ω" }
]) }}
{{ END }}
{{ tg_api( 
    editMessageText = {
        message_id = message.message_id
        text = TEXT
        parse_mode = "HTML"
        reply_markup = {
            inline_keyboard = buttons
        }
    }
)
        }}
<% CASE '—Å–ø–∏–Ω' %>
{{ IF callback_query.id }}
{ "answerCallbackQuery": { "callback_query_id": {{ callback_query.id }} }}
{{ END }}
{{ USE date }}
{{ IF user.settings.last_spin == date.format(date.now, '%Y-%m-%d') }}
{{ day_spin = 0 }}
{{ ELSE }}
{{ day_spin = 1 }}
{{ END }}
{{# spin_count = day_spin + user.settings.free_spin }}
{{ spin_count = user.settings.free_spin || 0 }}
{{ amount = spin_count }}
{{ last_digit = amount % 10 }}
{{ last_two_digits = amount % 100 }}

{{ IF last_two_digits >= 11 && last_two_digits <= 19 }}
{{ rubles = '–ø–æ–ø—ã—Ç–æ–∫' }}
{{ ELSIF last_digit == 1 }}
{{ rubles = '–ø–æ–ø—ã—Ç–∫–∞' }}
{{ ELSIF last_digit >= 2 && last_digit <= 4 }}
{{ rubles = '–ø–æ–ø—ã—Ç–∫–∏' }}
{{ ELSE }}
{{ rubles = '–ø–æ–ø—ã—Ç–æ–∫' }}
{{ END }}
{{ IF spin_count == 0 }}
{{ TEXT = BLOCK }}
<b>–£ –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ø–æ–ø—ã—Ç–∫–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è!</b>
{{ END }}
{{ buttons = [] }}
{{ IF user.us.has_services_block }}
{{ buttons.push([
{ text = "üí∞ –ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data = "/balance" }
]) }}
{{ END }}
{{ buttons.push([
{ text = "üë´ –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π", callback_data = "/referrals" }
]) }}
{{ buttons.push([
{ text = "‚óÑ –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data = "/menu" }
]) }}
{{ tg_api( sendMessage = {
        text = TEXT
        parse_mode = "HTML"
        reply_markup = {
            inline_keyboard = buttons
        }
    }
)
        }}
{{ ELSE }}
        {{ tg_api( 
    sendDice = {
        chat_id = message.chat.id,
        emoji = "üé∞",
        disable_notification = true,
    }
        ) }}
{{ IF user.settings.free_spin > 0 }}
{{ set_free_spin = user.set_settings({ 'free_spin' => user.settings.free_spin - 1 })  }}
{{ set_total_spin_count = user.set_settings({ 'total_spin_count' => user.settings.total_spin_count + 1 })  }}
{{ IF user.settings.last_spin == date.format(date.now, '%Y-%m-%d') }}
{{ day_spin = 0 }}
{{ ELSE }}
{{ day_spin = 1 }}
{{ END }}
{{# spin_count = day_spin + user.settings.free_spin }}
{{ spin_count = user.settings.free_spin || 0 }}
{{ amount = spin_count }}
{{ last_digit = amount % 10 }}
{{ last_two_digits = amount % 100 }}

{{ IF last_two_digits >= 11 && last_two_digits <= 19 }}
{{ rubles = '–ø–æ–ø—ã—Ç–æ–∫' }}
{{ ELSIF last_digit == 1 }}
{{ rubles = '–ø–æ–ø—ã—Ç–∫–∞' }}
{{ ELSIF last_digit >= 2 && last_digit <= 4 }}
{{ rubles = '–ø–æ–ø—ã—Ç–∫–∏' }}
{{ ELSE }}
{{ rubles = '–ø–æ–ø—ã—Ç–æ–∫' }}
{{ END }}

{{ END }}
{{ USE date }}
{{ date = date.format(response.result.date, '%Y-%m-%d') }}
{{ set_last_spin = user.set_settings({ 'last_spin' => date }) }}  
{{ TEXT = BLOCK }}
{{ IF response.result.dice.value == 64 }}
{{ id = user.set_bonus('bonus', 200, 'comment', {'msg' => 'slot_prize'} )  }}
–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 1 –º–µ—Å—è—Ü! üéÅ

üéâ –ù–∞—á–∏—Å–ª–∏–ª–∏ –≤–∞–º <b>200 –±–æ–Ω—É—Å–æ–≤</b> –Ω–∞ —Å—á–µ—Ç! üí∞

{{ ELSE  }}
–ë–µ–∑ –≤—ã–π–≥—Ä—ã—à–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑! üé∞

{{ END }}
{{ IF spin_count == 0 }}
<b>–£ –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ø–æ–ø—ã—Ç–∫–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è!</b>
{{ ELSE }}
–£ –≤–∞—Å –µ—Å—Ç—å –µ—â–µ {{ spin_count }}{{' '}}{{ rubles }}
{{ END }}
{{ END }}
{{ buttons = [] }}
{{ IF spin_count == 0 }}
{{ IF user.us.has_services_block }}
{{ buttons.push([
{ text = "üí∞ –ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data = "/balance" }
]) }}
{{ END }}
{{ buttons.push([
{ text = "üë´ –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π", callback_data = "/referrals" }
]) }}
{{ buttons.push([
{ text = "‚óÑ –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data = "/menu" }
]) }}
{{ ELSE }}
{{ buttons.push([
{ text = "üé∞ –í—Ä–∞—â–∞—Ç—å –±–∞—Ä–∞–±–∞–Ω", callback_data = "—Å–ø–∏–Ω" }
]) }}
{{ END }}
{{ PERL }} sleep 3; {{ END }}
{{ tg_api( sendMessage = {
        text = TEXT
        parse_mode = "HTML"
        reply_markup = {
            inline_keyboard = buttons
        }
    }
)
}}        
{{ END}}
<% CASE %>
{{ tg_api( sendMessage = { text = '–Ø –Ω–µ –∑–Ω–∞—é –∫–æ–º–∞–Ω–¥—ã: ' _  cmd  } ) }}
<% END %>